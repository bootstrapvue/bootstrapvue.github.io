(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{396:function(n,l){n.exports='<h1 id=alerts class=bv-no-focus-ring><span class=bd-content-title>Alerts</span></h1> <p class=bd-lead>Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p> <h2 id=overview class=bv-no-focus-ring><span class=bd-content-title>Overview<a class=anchorjs-link href=#overview aria-labelledby=overview></a></span></h2> <p>Alerts are available for any length of text, as well as an optional dismiss button (and optional auto-dismissing).</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span>&gt;</span>Default Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span> <span class=hljs-attr>show</span>&gt;</span>Success Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"showDismissibleAlert"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span> <span class=hljs-attr>dismissible</span>&gt;</span>\n      Dismissible Alert!\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span>\n      <span class=hljs-attr>:show</span>=<span class=hljs-string>"dismissCountDown"</span>\n      <span class=hljs-attr>dismissible</span>\n      <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>\n      @<span class=hljs-attr>dismissed</span>=<span class=hljs-string>"dismissCountDown=0"</span>\n      @<span class=hljs-attr>dismiss-count-down</span>=<span class=hljs-string>"countDownChanged"</span>\n    &gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>This alert will dismiss after {{ dismissCountDown }} seconds...<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-progress</span>\n        <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>\n        <span class=hljs-attr>:max</span>=<span class=hljs-string>"dismissSecs"</span>\n        <span class=hljs-attr>:value</span>=<span class=hljs-string>"dismissCountDown"</span>\n        <span class=hljs-attr>height</span>=<span class=hljs-string>"4px"</span>\n      &gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-progress</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"showAlert"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"m-1"</span>&gt;</span>\n      Show alert with count-down timer\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"showDismissibleAlert=true"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"m-1"</span>&gt;</span>\n      Show dismissible alert ({{ showDismissibleAlert ? \'visible\' : \'hidden\' }})\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>dismissSecs</span>: <span class=hljs-number>10</span>,\n        <span class=hljs-attr>dismissCountDown</span>: <span class=hljs-number>0</span>,\n        <span class=hljs-attr>showDismissibleAlert</span>: <span class=hljs-literal>false</span>\n      }\n    },\n    <span class=hljs-attr>methods</span>: {\n      countDownChanged(dismissCountDown) {\n        <span class=hljs-keyword>this</span>.dismissCountDown = dismissCountDown\n      },\n      showAlert() {\n        <span class=hljs-keyword>this</span>.dismissCountDown = <span class=hljs-keyword>this</span>.dismissSecs\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert.vue --&gt;</span></pre></div><h2 id=visible-state class=bv-no-focus-ring><span class=bd-content-title>Visible state<a class=anchorjs-link href=#visible-state aria-labelledby=visible-state></a></span></h2> <p>Use the <code class=text-nowrap translate=no>show</code> prop to control the visibility state of the alert. By default alerts are <strong>not</strong> shown. Set the prop <code class=text-nowrap translate=no>show</code> to explicitly display them.</p> <p>The <code class=text-nowrap translate=no>show</code> prop accepts boolean <code class=text-nowrap translate=no>true</code> or <code class=text-nowrap translate=no>false</code> to show and hide the alert respectively. It can also be set to a positive integer (representing seconds) to create a self dismissing alert. See the <a href=#auto-dismissing-alerts class=font-weight-bold>Auto Dismissing Alerts</a> section below for details.</p> <h3 id=v-model-support class=bv-no-focus-ring><span class=bd-content-title><code class=text-nowrap translate=no>v-model</code> support<a class=anchorjs-link href=#v-model-support aria-labelledby=v-model-support></a></span></h3> <p>You can use the <code class=text-nowrap translate=no>v-model</code> directive to create two-way data bindings on the <code class=text-nowrap translate=no>show</code> prop as in <code class=text-nowrap translate=no>v-model=&quot;showDismissibleAlert&quot;</code> above. Useful when you use dismissible because when user closes the alert, your variable will be updated. Do not use the <code class=text-nowrap translate=no>show</code> prop when using <code class=text-nowrap translate=no>v-model</code>.</p> <h2 id=contextual-variants class=bv-no-focus-ring><span class=bd-content-title>Contextual variants<a class=anchorjs-link href=#contextual-variants aria-labelledby=contextual-variants></a></span></h2> <p>For proper styling of <code class=text-nowrap translate=no>&lt;b-alert&gt;</code>, use one of the four required contextual variants by setting the <code class=text-nowrap translate=no>variant</code> prop to one of the following: <code class=text-nowrap translate=no>info</code>, <code class=text-nowrap translate=no>success</code>, <code class=text-nowrap translate=no>warning</code> or <code class=text-nowrap translate=no>danger</code>. The default is <code class=text-nowrap translate=no>info</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span>&gt;</span>Primary Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"secondary"</span>&gt;</span>Secondary Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span>&gt;</span>Success Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span>&gt;</span>Danger Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>&gt;</span>Warning Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span>&gt;</span>Info Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"light"</span>&gt;</span>Light Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"dark"</span>&gt;</span>Dark Alert<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-variants.vue --&gt;</span></pre></div><h3 id=conveying-meaning-to-assistive-technologies class=bv-no-focus-ring><span class=bd-content-title>Conveying meaning to assistive technologies<a class=anchorjs-link href=#conveying-meaning-to-assistive-technologies aria-labelledby=conveying-meaning-to-assistive-technologies></a></span></h3> <p>Using color variants to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies – such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the <code class=text-nowrap translate=no>.sr-only</code> class.</p> <h2 id=additional-content-inside-alerts class=bv-no-focus-ring><span class=bd-content-title>Additional content inside alerts<a class=anchorjs-link href=#additional-content-inside-alerts aria-labelledby=additional-content-inside-alerts></a></span></h2> <p><code class=text-nowrap translate=no>&lt;b-alerts&gt;</code> can also contain additional HTML elements like headings and paragraphs, which will be styled with the appropriate color matching the variant.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>h4</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-heading"</span>&gt;</span>Well done!<span class=hljs-tag>&lt;/<span class=hljs-name>h4</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>\n      Aww yeah, you successfully read this important alert message. This example text is going to\n      run a bit longer so that you can see how spacing within an alert works with this kind of\n      content.\n    <span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>hr</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-0"</span>&gt;</span>\n      Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n    <span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-content.vue --&gt;</span></pre></div><h3 id=color-of-links-within-alerts class=bv-no-focus-ring><span class=bd-content-title>Color of links within alerts<a class=anchorjs-link href=#color-of-links-within-alerts aria-labelledby=color-of-links-within-alerts></a></span></h3> <p>Use the <code class=text-nowrap translate=no>.alert-link</code> utility CSS class to quickly provide matching colored links within any alert. Use on <code class=text-nowrap translate=no>&lt;a&gt;</code> or <code class=text-nowrap translate=no>&lt;b-link&gt;</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Primary Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"secondary"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Secondary Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Success Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Danger Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Warning Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Info Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"light"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Light Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"dark"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"alert-link"</span>&gt;</span>Dark Alert<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-links.vue --&gt;</span></pre></div><h2 id=dismissible-alerts class=bv-no-focus-ring><span class=bd-content-title>Dismissible alerts<a class=anchorjs-link href=#dismissible-alerts aria-labelledby=dismissible-alerts></a></span></h2> <p>Using the <code class=text-nowrap translate=no>dismissible</code> prop it&#39;s possible to dismiss any <code class=text-nowrap translate=no>&lt;b-alert&gt;</code> inline. This will add a close <code class=text-nowrap translate=no>X</code> button. Use the <code class=text-nowrap translate=no>dismiss-label</code> prop to change the hidden label text associated with the dismiss button.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>dismissible</span>&gt;</span>\n    Dismissible Alert! Click the close button over there <span class=hljs-tag>&lt;<span class=hljs-name>b</span>&gt;</span><span class=hljs-symbol>&amp;rArr;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-dismiss.vue --&gt;</span></pre></div><h3 id=auto-dismissing-alerts class=bv-no-focus-ring><span class=bd-content-title>Auto dismissing alerts<a class=anchorjs-link href=#auto-dismissing-alerts aria-labelledby=auto-dismissing-alerts></a></span></h3> <p>To create a <code class=text-nowrap translate=no>&lt;b-alert&gt;</code> that dismisses automatically after a period of time, set the <code class=text-nowrap translate=no>show</code> prop (or the <code class=text-nowrap translate=no>v-model</code>) to the number of seconds you would like the <code class=text-nowrap translate=no>&lt;b-alert&gt;</code> to remain visible for. Only integer number of seconds are supported.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span>\n      <span class=hljs-attr>:show</span>=<span class=hljs-string>"dismissCountDown"</span>\n      <span class=hljs-attr>dismissible</span>\n      <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>\n      @<span class=hljs-attr>dismissed</span>=<span class=hljs-string>"dismissCountDown=0"</span>\n      @<span class=hljs-attr>dismiss-count-down</span>=<span class=hljs-string>"countDownChanged"</span>\n    &gt;</span>\n      This alert will dismiss after {{ dismissCountDown }} seconds...\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"showAlert"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"m-1"</span>&gt;</span>\n      Show alert with count-down timer\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>dismissSecs</span>: <span class=hljs-number>5</span>,\n        <span class=hljs-attr>dismissCountDown</span>: <span class=hljs-number>0</span>\n      }\n    },\n    <span class=hljs-attr>methods</span>: {\n      countDownChanged(dismissCountDown) {\n        <span class=hljs-keyword>this</span>.dismissCountDown = dismissCountDown\n      },\n      showAlert() {\n        <span class=hljs-keyword>this</span>.dismissCountDown = <span class=hljs-keyword>this</span>.dismissSecs\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-auto-dismissing.vue --&gt;</span></pre></div><h2 id=fading-alerts class=bv-no-focus-ring><span class=bd-content-title>Fading alerts<a class=anchorjs-link href=#fading-alerts aria-labelledby=fading-alerts></a></span></h2> <p>Use the <code class=text-nowrap translate=no>fade</code> prop to enable animation. By default alerts are not animated.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span> <span class=hljs-attr>show</span> <span class=hljs-attr>dismissible</span> <span class=hljs-attr>fade</span>&gt;</span>Dismissible Alert!<span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span>\n      <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span>\n      <span class=hljs-attr>dismissible</span>\n      <span class=hljs-attr>fade</span>\n      <span class=hljs-attr>:show</span>=<span class=hljs-string>"showDismissibleAlert"</span>\n      @<span class=hljs-attr>dismissed</span>=<span class=hljs-string>"showDismissibleAlert=false"</span>\n    &gt;</span>\n      Dismissible Alert!\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-alert</span>\n      <span class=hljs-attr>:show</span>=<span class=hljs-string>"dismissCountDown"</span>\n      <span class=hljs-attr>dismissible</span>\n      <span class=hljs-attr>fade</span>\n      <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>\n      @<span class=hljs-attr>dismiss-count-down</span>=<span class=hljs-string>"countDownChanged"</span>\n    &gt;</span>\n      This alert will dismiss after {{ dismissCountDown }} seconds...\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-alert</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"showAlert"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"m-1"</span>&gt;</span>\n      Show alert with count-down timer\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"showDismissibleAlert=true"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"m-1"</span>&gt;</span>\n      Show dismissible alert ({{ showDismissibleAlert ? \'visible\' : \'hidden\' }})\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>dismissSecs</span>: <span class=hljs-number>5</span>,\n        <span class=hljs-attr>dismissCountDown</span>: <span class=hljs-number>0</span>,\n        <span class=hljs-attr>showDismissibleAlert</span>: <span class=hljs-literal>false</span>\n      }\n    },\n    <span class=hljs-attr>methods</span>: {\n      countDownChanged(dismissCountDown) {\n        <span class=hljs-keyword>this</span>.dismissCountDown = dismissCountDown\n      },\n      showAlert() {\n        <span class=hljs-keyword>this</span>.dismissCountDown = <span class=hljs-keyword>this</span>.dismissSecs\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-alert-fade.vue --&gt;</span></pre></div> '}}]);