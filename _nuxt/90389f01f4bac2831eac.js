(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{398:function(n,t){n.exports='<h1 id=avatar class=bv-no-focus-ring><span class=bd-content-title>Avatar</span></h1> <p class=bd-lead>Avatars are a BootstrapVue custom component, and are typically used to display a user profile as a picture, an icon, or short text. <code class=text-nowrap translate=no>&lt;b-avatar&gt;</code> provides several props for customizing its appearance such as color variant and roundness, and optionally supports acting as a button, link or <a href=/docs/reference/router-links class=font-weight-bold>router link</a>.</p> <h2 id=overview class=bv-no-focus-ring><span class=bd-content-title>Overview<a class=anchorjs-link href=#overview aria-labelledby=overview></a></span></h2> <p>Avatars are lightweight components, which render inline by default, so that they are vertically centered beside any adjoining plain text. They also can be used as children of other components.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>Using stand-alone:<span class=hljs-tag>&lt;<span class=hljs-name>p</span>/&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-4"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"people-fill"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>Using in components (list group) example:<span class=hljs-tag>&lt;<span class=hljs-name>p</span>/&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-list-group</span> <span class=hljs-attr>style</span>=<span class=hljs-string>"max-width: 300px;"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-list-group-item</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"d-flex align-items-center"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-3"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-auto"</span>&gt;</span>J. Circlehead<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-badge</span>&gt;</span>5<span class=hljs-tag>&lt;/<span class=hljs-name>b-badge</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-list-group-item</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-list-group-item</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"d-flex align-items-center"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-3"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-auto"</span>&gt;</span>BootstrapVue<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-badge</span>&gt;</span>12<span class=hljs-tag>&lt;/<span class=hljs-name>b-badge</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-list-group-item</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-list-group-item</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"d-flex align-items-center"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-3"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-auto"</span>&gt;</span>Super Kitty<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-badge</span>&gt;</span>9<span class=hljs-tag>&lt;/<span class=hljs-name>b-badge</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-list-group-item</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-list-group-item</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"d-flex align-items-center"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"people-fill"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-3"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mr-auto"</span>&gt;</span>ACME group<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-badge</span>&gt;</span>7<span class=hljs-tag>&lt;/<span class=hljs-name>b-badge</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-list-group-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-list-group</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar.vue --&gt;</span></pre></div><h2 id=avatar-types class=bv-no-focus-ring><span class=bd-content-title>Avatar types<a class=anchorjs-link href=#avatar-types aria-labelledby=avatar-types></a></span></h2> <p>The avatar content can be either a an image, an icon, or short text string. Avatar content defaults to the <a href=/docs/icons class=font-weight-bold><code class=text-nowrap translate=no>&#39;person-fill&#39;</code> icon</a> when no other content is specified.</p> <p>You can also supply custom content via the default slot, although you may need to apply additional styling on the content.</p> <h3 id=image-content class=bv-no-focus-ring><span class=bd-content-title>Image content<a class=anchorjs-link href=#image-content aria-labelledby=image-content></a></span></h3> <p>Use the <code class=text-nowrap translate=no>src</code> prop to specify a URL of an image to use as the avatar content. The image should have an aspect ratio of <code class=text-nowrap translate=no>1:1</code> (meaning the width and height should be equal), otherwise image aspect distortion will occur. The image will be scaled up or down to fit withing the avatar&#39;s bounding box, and will be sized to show the avatar&#39;s <a href=#variants class=font-weight-bold>variant background</a> around the edge.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"6rem"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-src.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>When using a module bundler and project relative image URLs, please refer to the <a href=/docs/reference/images class=font-weight-bold>Component img src resolving</a> reference section for additional details.</li> <li>The <code class=text-nowrap translate=no>src</code> prop takes precedence over the <code class=text-nowrap translate=no>icon</code> and <code class=text-nowrap translate=no>text</code> props.</li> <li><span class="badge badge-secondary">2.11.0+</span> If the image fails to load, the avatar will fallback to the value of the <code class=text-nowrap translate=no>icon</code> or <code class=text-nowrap translate=no>text</code> props. If neither the <code class=text-nowrap translate=no>icon</code> or <code class=text-nowrap translate=no>text</code> props are provided, then the default avatar icon will be shown. Also, when the image fails to load, the <code class=text-nowrap translate=no>img-error</code> event will be emitted.</li> </ul> <h3 id=icon-content class=bv-no-focus-ring><span class=bd-content-title>Icon content<a class=anchorjs-link href=#icon-content aria-labelledby=icon-content></a></span></h3> <p>Easily use one of <a href=/docs/icons class=font-weight-bold>BootstrapVue&#39;s icons</a> as the avatar content via the <code class=text-nowrap translate=no>icon</code> prop. The prop should be set to a valid icon name. Icons will scale respective to the <a href=#sizing class=font-weight-bold><code class=text-nowrap translate=no>size</code> prop</a>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"people-fill"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"star-fill"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"music-note"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"star-fill"</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"4em"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-icon.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>When providing a BootstrapVue icon name, you <em>must</em> ensure that you have registered the corresponding icon component (either locally to your component/page, or globally), if not using the full <a href=/docs/icons class=font-weight-bold><code class=text-nowrap translate=no>BootstrapVueIcons</code> plugin</a>.</li> <li>The <code class=text-nowrap translate=no>icon</code> prop takes precedence over the <code class=text-nowrap translate=no>text</code> prop.</li> <li>If the <code class=text-nowrap translate=no>text</code>, <code class=text-nowrap translate=no>src</code>, or <code class=text-nowrap translate=no>icon</code> props are not provided <em>and</em> the <a href=#custom-content class=font-weight-bold>default slot</a> has no content, then the <code class=text-nowrap translate=no>person-fill</code> icon will be used.</li> </ul> <h3 id=text-content class=bv-no-focus-ring><span class=bd-content-title>Text content<a class=anchorjs-link href=#text-content aria-labelledby=text-content></a></span></h3> <p>You can specify a short string as the content of an avatar via the <code class=text-nowrap translate=no>text</code> prop. The string should be short (1 to 3 characters), and will be transformed via CSS to be all uppercase. The font size will be scaled relative to the <a href=#sizing class=font-weight-bold><code class=text-nowrap translate=no>size</code> prop setting</a>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"a"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"Foo"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"4rem"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-text.vue --&gt;</span></pre></div><h3 id=custom-content class=bv-no-focus-ring><span class=bd-content-title>Custom content<a class=anchorjs-link href=#custom-content aria-labelledby=custom-content></a></span></h3> <p>Use the <code class=text-nowrap translate=no>default</code> slot to render custom content in the avatar, for finer grained control of its appearance, or if using custom icons or SVGs e.g.:</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>custom-icon</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>custom-icon</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>The default slot takes precedence over the <code class=text-nowrap translate=no>text</code>, <code class=text-nowrap translate=no>src</code> and <code class=text-nowrap translate=no>icon</code> props.</li> <li>The default slot content will be wrapped in a <code class=text-nowrap translate=no>&lt;span&gt;</code> element to ensure proper centering.</li> <li>You may need additional styling applied to the custom content to compensate for the <a href=#rounding class=font-weight-bold>shape of avatar component</a>.</li> </ul> <h2 id=styling class=bv-no-focus-ring><span class=bd-content-title>Styling<a class=anchorjs-link href=#styling aria-labelledby=styling></a></span></h2> <h3 id=variants class=bv-no-focus-ring><span class=bd-content-title>Variants<a class=anchorjs-link href=#variants aria-labelledby=variants></a></span></h3> <p>Use the <code class=text-nowrap translate=no>variant</code> prop to specify one of Bootstrap theme variant colors. The default variant is <code class=text-nowrap translate=no>secondary</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"secondary"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"dark"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"light"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-variant.vue --&gt;</span></pre></div><p>If you have defined additional custom variants via <a href=/docs/reference/theming class=font-weight-bold>SASS theming variables</a>, the custom variants will also be available to use.</p> <h3 id=sizing class=bv-no-focus-ring><span class=bd-content-title>Sizing<a class=anchorjs-link href=#sizing aria-labelledby=sizing></a></span></h3> <p>By default, avatars are sized to <code class=text-nowrap translate=no>2.5em</code> (which is relative to the current font size). You can change the size of the avatar by changing the current font size, or use the prop <code class=text-nowrap translate=no>size</code> to specify an explicit size. The sizes <code class=text-nowrap translate=no>sm</code>, <code class=text-nowrap translate=no>md</code> and <code class=text-nowrap translate=no>lg</code> default to <code class=text-nowrap translate=no>1.5em</code>, <code class=text-nowrap translate=no>2.5em</code> and <code class=text-nowrap translate=no>3.5em</code>. Numbers get converted to pixel values. Any other value <em>must</em> include the units (such as <code class=text-nowrap translate=no>px</code>, <code class=text-nowrap translate=no>em</code>, or <code class=text-nowrap translate=no>rem</code>).</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"sm"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"lg"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>:size</span>=<span class=hljs-string>"24"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"3em"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"72px"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-size.vue --&gt;</span></pre></div><p><strong>Note:</strong> Avatars are <em>always</em> rendered with an aspect ratio of <code class=text-nowrap translate=no>1:1</code>.</p> <h3 id=square class=bv-no-focus-ring><span class=bd-content-title>Square<a class=anchorjs-link href=#square aria-labelledby=square></a></span></h3> <p>Prefer a square avatar? simply set the <code class=text-nowrap translate=no>square</code> prop to <code class=text-nowrap translate=no>true</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>square</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-square.vue --&gt;</span></pre></div><h3 id=rounding class=bv-no-focus-ring><span class=bd-content-title>Rounding<a class=anchorjs-link href=#rounding aria-labelledby=rounding></a></span></h3> <p><code class=text-nowrap translate=no>&lt;b-avatar&gt;</code> renders with a circular border radius. You can change the rounding by setting the prop <code class=text-nowrap translate=no>rounded</code> to one of the values <code class=text-nowrap translate=no>true</code>, <code class=text-nowrap translate=no>&#39;sm&#39;</code>, <code class=text-nowrap translate=no>&#39;lg&#39;</code>, <code class=text-nowrap translate=no>&#39;top&#39;</code>, <code class=text-nowrap translate=no>&#39;left&#39;</code>, <code class=text-nowrap translate=no>&#39;right&#39;</code>, or <code class=text-nowrap translate=no>&#39;bottom&#39;</code>. When set to <code class=text-nowrap translate=no>true</code> (or the empty string <code class=text-nowrap translate=no>&#39;&#39;</code>), it uses the Bootstrap default of medium rounding.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>style</span>=<span class=hljs-string>"font-size: 2rem;"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"sm"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"lg"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"top"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"left"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"right"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>rounded</span>=<span class=hljs-string>"bottom"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-rounding.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>The <code class=text-nowrap translate=no>square</code> prop takes precedence over the <code class=text-nowrap translate=no>rounded</code> prop.</li> <li>Alternatively to to the <code class=text-nowrap translate=no>square</code> prop, you can set the <code class=text-nowrap translate=no>rounded</code> prop to the string <code class=text-nowrap translate=no>&#39;0&#39;</code> to achieve a square avatar.</li> </ul> <h3 id=alignment class=bv-no-focus-ring><span class=bd-content-title>Alignment<a class=anchorjs-link href=#alignment aria-labelledby=alignment></a></span></h3> <p>By default <code class=text-nowrap translate=no>&lt;b-avatar&gt;</code> will be vertically centered with its adjoining content. In some cases you may want to alter the alignment, such as ensuring that a text-only avatar aligns its text with the adjoining text. Simply set a <a href=/docs/reference/utility-classes class=font-weight-bold>vertical alignment utility</a> class on the component, such as <code class=text-nowrap translate=no>&lt;b-avatar class=&quot;align-baseline&quot; ...&gt;</code> or <code class=text-nowrap translate=no>&lt;b-avatar class=&quot;align-top&quot; ...&gt;</code>, etc.</p> <h2 id=actionable-avatars class=bv-no-focus-ring><span class=bd-content-title>Actionable avatars<a class=anchorjs-link href=#actionable-avatars aria-labelledby=actionable-avatars></a></span></h2> <p>Easily create avatars that respond to clicks, or avatars that change the URL/route when clicked. Actionable avatars will appear in the document tab sequence, and are accessible for both screen reader and keyboard-only users.</p> <h3 id=button class=bv-no-focus-ring><span class=bd-content-title>Button<a class=anchorjs-link href=#button aria-labelledby=button></a></span></h3> <p>Want to trigger the opening of a modal or trigger an action? Set the <code class=text-nowrap translate=no>button</code> prop to instruct <code class=text-nowrap translate=no>&lt;b-avatar&gt;</code> to render as a <code class=text-nowrap translate=no>&lt;button&gt;</code> element. When rendered as a button, the component will emit the <code class=text-nowrap translate=no>click</code> event whenever clicked.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"onClick"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"FF"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"align-baseline"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    Button Avatar\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    <span class=hljs-attr>methods</span>: {\n      onClick() {\n        <span class=hljs-keyword>this</span>.$bvModal.msgBoxOk(<span class=hljs-string>\'User name: Fred Flintstone\'</span>, {\n          <span class=hljs-attr>title</span>: <span class=hljs-string>\'User Info\'</span>,\n          <span class=hljs-attr>size</span>: <span class=hljs-string>\'sm\'</span>,\n          <span class=hljs-attr>buttonSize</span>: <span class=hljs-string>\'sm\'</span>,\n          <span class=hljs-attr>okVariant</span>: <span class=hljs-string>\'success\'</span>,\n          <span class=hljs-attr>headerClass</span>: <span class=hljs-string>\'p-2 border-bottom-0\'</span>,\n          <span class=hljs-attr>footerClass</span>: <span class=hljs-string>\'p-2 border-top-0\'</span>\n        })\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-button.vue --&gt;</span></pre></div><p>The prop <code class=text-nowrap translate=no>button-type</code> can be used to control the type of button to render. Supported values are <code class=text-nowrap translate=no>&#39;button&#39;</code> (the default), <code class=text-nowrap translate=no>&#39;submit&#39;</code>, or <code class=text-nowrap translate=no>&#39;reset&#39;</code>.</p> <h3 id=link class=bv-no-focus-ring><span class=bd-content-title>Link<a class=anchorjs-link href=#link aria-labelledby=link></a></span></h3> <p>Fancy an avatar as a link or router link? Simply set either the <code class=text-nowrap translate=no>href</code> or <code class=text-nowrap translate=no>to</code> props (respectively). The <code class=text-nowrap translate=no>to</code> prop can either be a string path, or a <code class=text-nowrap translate=no>Location</code> object. The <code class=text-nowrap translate=no>to</code> prop requires that <code class=text-nowrap translate=no>Vue router</code> (or equivalent) be installed.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#foobar"</span><span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    Link Avatar\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-href.vue --&gt;</span></pre></div><p><strong>Note:</strong></p> <ul> <li>The <code class=text-nowrap translate=no>button</code> prop takes precedence over the <code class=text-nowrap translate=no>href</code> and <code class=text-nowrap translate=no>to</code> props.</li> <li>For additional details on the <code class=text-nowrap translate=no>&lt;router-link&gt;</code> compatible props, please refer to the <a href=/docs/reference/router-links class=font-weight-bold>Router support reference section</a>.</li> </ul> <h2 id=badge-avatars class=bv-no-focus-ring><span class=bd-content-title>Badge avatars<a class=anchorjs-link href=#badge-avatars aria-labelledby=badge-avatars></a></span></h2> <p><span class="badge badge-info small">2.12.0+<span></span></span></p> <p>Easily add a badge to your avatar via the <code class=text-nowrap translate=no>badge</code> prop or <code class=text-nowrap translate=no>&#39;badge&#39;</code> slot, and the badge variant can be set via the <code class=text-nowrap translate=no>badge-variant</code> prop. The badge will scale with the size of the avatar.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"danger"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"warning"</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"people-fill"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"success"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"dark"</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>square</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"dark"</span> <span class=hljs-attr>text</span>=<span class=hljs-string>"BV"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-badge.vue --&gt;</span></pre></div><h3 id=badge-content class=bv-no-focus-ring><span class=bd-content-title>Badge content<a class=anchorjs-link href=#badge-content aria-labelledby=badge-content></a></span></h3> <p>Add textual content to the badge by supplying a string to the <code class=text-nowrap translate=no>badge</code> prop, or use the named slot <code class=text-nowrap translate=no>&#39;badge&#39;</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>style</span>=<span class=hljs-string>"font-size: 2rem"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span>=<span class=hljs-string>"BV"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span>=<span class=hljs-string>"7"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"dark"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge-variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://placekitten.com/300/300"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>template</span> <span class=hljs-attr>v-slot:badge</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>b-icon</span> <span class=hljs-attr>icon</span>=<span class=hljs-string>"star-fill"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-badge</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-badge-content.vue --&gt;</span></pre></div><h3 id=badge-positioning class=bv-no-focus-ring><span class=bd-content-title>Badge positioning<a class=anchorjs-link href=#badge-positioning aria-labelledby=badge-positioning></a></span></h3> <p>By default the badge appears on the bottom right of the avatar. You can use the <code class=text-nowrap translate=no>badge-top</code> and <code class=text-nowrap translate=no>badge-right</code> boolean props to switch the sides. Combine both props to move the badge to the top right of the avatar.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-left</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-top</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-left</span> <span class=hljs-attr>badge-top</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-badge-position.vue --&gt;</span></pre></div><p>Use the <code class=text-nowrap translate=no>badge-offset</code> prop to control the offset of the badge. The <code class=text-nowrap translate=no>badge-offset</code> must be a valid CSS length string (i.e. <code class=text-nowrap translate=no>&#39;2px&#39;</code>, <code class=text-nowrap translate=no>&#39;-2px&#39;</code>, <code class=text-nowrap translate=no>&#39;0.5em&#39;</code>, etc.). Positive values will move the badge inward, while negative values will move the badge outward.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"-0.5em"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"-2px"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"2px"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-top</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-top</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"-0.5em"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-top</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"-2px"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-avatar</span> <span class=hljs-attr>badge</span> <span class=hljs-attr>badge-top</span> <span class=hljs-attr>badge-offset</span>=<span class=hljs-string>"2px"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-avatar</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-avatar-badge-offset.vue --&gt;</span></pre></div><h2 id=accessibility class=bv-no-focus-ring><span class=bd-content-title>Accessibility<a class=anchorjs-link href=#accessibility aria-labelledby=accessibility></a></span></h2> <p>Use the <code class=text-nowrap translate=no>aria-label</code> prop to provide an accessible, screen reader friendly, label for your avatar. If you have a badge, it is recommended to add inforation to your aria-label regarding the badge purpose or content (i.g. <code class=text-nowrap translate=no>&#39;3 messages&#39;</code>, <code class=text-nowrap translate=no>&#39;online&#39;</code>, etc)).</p> <p>While the <code class=text-nowrap translate=no>click</code> event is emitted regardless if the <code class=text-nowrap translate=no>button</code>, <code class=text-nowrap translate=no>href</code>, or <code class=text-nowrap translate=no>to</code> props are set, it is highly recommended to use the <code class=text-nowrap translate=no>button</code> prop when the click event should trigger an action (or use the <code class=text-nowrap translate=no>to</code> or <code class=text-nowrap translate=no>href</code> props when changing routes or changing URLs) for accessibility reasons.</p> <h2 id=implementation-notes class=bv-no-focus-ring><span class=bd-content-title>Implementation notes<a class=anchorjs-link href=#implementation-notes aria-labelledby=implementation-notes></a></span></h2> <p>Avatars are based upon <code class=text-nowrap translate=no>&lt;b-badge&gt;</code> and <code class=text-nowrap translate=no>&lt;b-button&gt;</code> components, and as such, rely upon Bootstrap&#39;s <code class=text-nowrap translate=no>badge-*</code> and <code class=text-nowrap translate=no>btn-*</code> variant classes, as well as the <code class=text-nowrap translate=no>rounded-*</code> <a href=/docs/reference/utility-classes class=font-weight-bold>utility classes</a>.</p> <p><code class=text-nowrap translate=no>&lt;b-avatar&gt;</code> also requires BootstrapVue&#39;s custom CSS for proper styling.</p> '}}]);