(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{351:function(n,l){n.exports='<h1 id=form-rating class=bv-no-focus-ring><span class=bd-content-title>Form Rating</span></h1> <p class=bd-lead>BootstrapVue&#39;s custom range component, <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code>, is for entering or displaying a rating value. The component is fully WAI-ARIA accessible and supports keyboard control.</p> <h2 id=overview class=bv-no-focus-ring><span class=bd-content-title>Overview<a class=anchorjs-link href=#overview aria-labelledby=overview></a></span></h2> <p>Rating values range from <code class=text-nowrap translate=no>1</code> to the number of stars allowed (default stars is <code class=text-nowrap translate=no>5</code>, minimum stars is <code class=text-nowrap translate=no>3</code>). Since <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> uses the Bootstrap class <code class=text-nowrap translate=no>form-control</code>, it can easily be placed inside <a href=/docs/components/input-group class=font-weight-bold>input groups</a>.</p> <p>There are two main modes for <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code>: interactive and readonly.</p> <p>Interactive mode allows the user to chose a rating from <code class=text-nowrap translate=no>1</code> to the number of stars (default <code class=text-nowrap translate=no>5</code>) in whole number increments.</p> <p><strong>Interactive rating (input mode):</strong></p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-literal>null</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating.vue --&gt;</span></pre></div><p>Readonly mode is used for displaying an aggregated rating, and supports <code class=text-nowrap translate=no>half</code> stars.</p> <p><strong>Readonly (non-interactive) rating:</strong></p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>readonly</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>2.567</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-non-interactive.vue --&gt;</span></pre></div><h2 id=styling class=bv-no-focus-ring><span class=bd-content-title>Styling<a class=anchorjs-link href=#styling aria-labelledby=styling></a></span></h2> <h3 id=variant-and-color class=bv-no-focus-ring><span class=bd-content-title>Variant and color<a class=anchorjs-link href=#variant-and-color aria-labelledby=variant-and-color></a></span></h3> <p>Easily apply one of the Bootstrap theme color variants to the rating icon via the <code class=text-nowrap translate=no>variant</code> prop. The default is to use the default form control text color.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"warning"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"success"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"primary"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>variant</span>=<span class=hljs-string>"info"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>3</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-variant.vue --&gt;</span></pre></div><p>To apply a <em>custom color</em>, use the <code class=text-nowrap translate=no>color</code> prop which accepts a standard CSS color name, HEX color value (<code class=text-nowrap translate=no>#...</code>) or RGB/RGBA (<code class=text-nowrap translate=no>rgb(...)</code>/<code class=text-nowrap translate=no>rgba(...)</code>) color value:</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>color</span>=<span class=hljs-string>"indigo"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>color</span>=<span class=hljs-string>"#ff00ff"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>color</span>=<span class=hljs-string>"rgb(64, 192, 128)"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>color</span>=<span class=hljs-string>"rgba(64, 192, 128, 0.75)"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-literal>null</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-color.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>The prop <code class=text-nowrap translate=no>color</code> takes precedence over the <code class=text-nowrap translate=no>variant</code> prop</li> <li>Variants translate to the <code class=text-nowrap translate=no>text-{variant}</code> utility class on the icon</li> </ul> <h3 id=number-of-stars class=bv-no-focus-ring><span class=bd-content-title>Number of stars<a class=anchorjs-link href=#number-of-stars aria-labelledby=number-of-stars></a></span></h3> <p>By default, <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> defaults to <code class=text-nowrap translate=no>5</code> stars. You can change the number of stars via the <code class=text-nowrap translate=no>stars</code> prop. The minimum allowed stars is <code class=text-nowrap translate=no>3</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-10"</span>&gt;</span>Rating with 10 stars:<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-10"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value10"</span> <span class=hljs-attr>stars</span>=<span class=hljs-string>"10"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value10 }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-7"</span>&gt;</span>Rating with 7 stars:<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-7"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value7"</span> <span class=hljs-attr>stars</span>=<span class=hljs-string>"7"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value7 }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value10</span>: <span class=hljs-literal>null</span>,\n        <span class=hljs-attr>value7</span>: <span class=hljs-literal>null</span>,\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-stars.vue --&gt;</span></pre></div><h3 id=show-value class=bv-no-focus-ring><span class=bd-content-title>Show value<a class=anchorjs-link href=#show-value aria-labelledby=show-value></a></span></h3> <p>By default <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> does not display the current numerical value. To show the current value simply set the <code class=text-nowrap translate=no>show-value</code> prop to <code class=text-nowrap translate=no>true</code>. To control the precision (number of digits after the decimal) simply set the <code class=text-nowrap translate=no>precision</code> prop to the number of digits after the decimal to show. The <code class=text-nowrap translate=no>precision</code> setting is useful when showing an aggregated or average rating value in <code class=text-nowrap translate=no>readonly</code> mode.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>show-value</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>4</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-value.vue --&gt;</span></pre></div><p><strong>With precision set:</strong></p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>readonly</span> <span class=hljs-attr>show-value</span> <span class=hljs-attr>precision</span>=<span class=hljs-string>"2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>3.555</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-value-precision.vue --&gt;</span></pre></div><h3 id=control-sizing class=bv-no-focus-ring><span class=bd-content-title>Control sizing<a class=anchorjs-link href=#control-sizing aria-labelledby=control-sizing></a></span></h3> <p>Fancy a small or large rating control? Simply set the prop <code class=text-nowrap translate=no>size</code> to either <code class=text-nowrap translate=no>&#39;sm&#39;</code> or <code class=text-nowrap translate=no>&#39;lg&#39;</code> respectively.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-sm"</span>&gt;</span>Small rating<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-sm"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"sm"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-md"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-3"</span>&gt;</span>Default rating (medium)<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-md"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-lg"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-3"</span>&gt;</span>Large rating<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-lg"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"lg"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-literal>null</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-size.vue --&gt;</span></pre></div><h3 id=inline-mode class=bv-no-focus-ring><span class=bd-content-title>Inline mode<a class=anchorjs-link href=#inline-mode aria-labelledby=inline-mode></a></span></h3> <p>By default, <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> occupies 100% width of the parent container. In some situations you may prefer the custom input to occupy on the space required for it&#39;s contents. Simply set the <code class=text-nowrap translate=no>inline</code> prop to <code class=text-nowrap translate=no>true</code> to render the component in inline mode:</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-inline"</span>&gt;</span>Inline rating:<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-inline"</span> <span class=hljs-attr>inline</span> <span class=hljs-attr>value</span>=<span class=hljs-string>"4"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-inline.vue --&gt;</span></pre></div><h3 id=borderless class=bv-no-focus-ring><span class=bd-content-title>Borderless<a class=anchorjs-link href=#borderless aria-labelledby=borderless></a></span></h3> <p>By default, <code class=text-nowrap translate=no>&lt;b-from-rating&gt;</code> has standard Bootstrap form-control styling. To disable the default form-control border, simply set the <code class=text-nowrap translate=no>no-border</code> prop to <code class=text-nowrap translate=no>true</code>.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-sm-no-border"</span>&gt;</span>Small rating with no border<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-sm-no-border"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>no-border</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"sm"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-md-no-border"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-3"</span>&gt;</span>Default rating (medium) with no border<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-md-no-border"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>no-border</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-lg-no-border"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-3"</span>&gt;</span>Large rating with no border<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-lg-no-border"</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>no-border</span> <span class=hljs-attr>size</span>=<span class=hljs-string>"lg"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-literal>null</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-no-border.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>For accessibility reasons a focus ring will show when the rating component has focus, regardless of the <code class=text-nowrap translate=no>no-border</code> setting.</li> </ul> <h3 id=disabled class=bv-no-focus-ring><span class=bd-content-title>Disabled<a class=anchorjs-link href=#disabled aria-labelledby=disabled></a></span></h3> <p>If you require additional information before a user can chose a ratings value, simply set the <code class=text-nowrap translate=no>disabled</code> prop to <code class=text-nowrap translate=no>true</code> to disable any user interactivity on the component:</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-disabled"</span>&gt;</span>Disabled rating<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-disabled"</span> <span class=hljs-attr>value</span>=<span class=hljs-string>"2.75"</span> <span class=hljs-attr>disabled</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-disabled.vue --&gt;</span></pre></div><h3 id=readonly class=bv-no-focus-ring><span class=bd-content-title>Readonly<a class=anchorjs-link href=#readonly aria-labelledby=readonly></a></span></h3> <p>Readonly ratings remain focusable, but are not interactive. This state is useful for displaying an aggregated or average ratings value. Fractional values are allowed and will result in the displaying of <em>half icons</em> when the <code class=text-nowrap translate=no>value</code> is not a whole number (the half icon threshold is <code class=text-nowrap translate=no>0.5</code>).</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>label</span> <span class=hljs-attr>for</span>=<span class=hljs-string>"rating-readonly"</span>&gt;</span>Readonly rating<span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span>\n      <span class=hljs-attr>id</span>=<span class=hljs-string>"rating-readonly"</span>\n      <span class=hljs-attr>value</span>=<span class=hljs-string>"3.6536"</span>\n      <span class=hljs-attr>readonly</span>\n      <span class=hljs-attr>show-value</span>\n      <span class=hljs-attr>precision</span>=<span class=hljs-string>"3"</span>\n    &gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-readonly.vue --&gt;</span></pre></div><h3 id=clear-button class=bv-no-focus-ring><span class=bd-content-title>Clear button<a class=anchorjs-link href=#clear-button aria-labelledby=clear-button></a></span></h3> <p>Optionally show a clear icon via the <code class=text-nowrap translate=no>show-clear</code> prop. The value will be set to <code class=text-nowrap translate=no>null</code> when the clear icon is clicked.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>show-clear</span> <span class=hljs-attr>show-value</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>2.5</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-clear.vue --&gt;</span></pre></div><p><strong>Notes:</strong></p> <ul> <li>The clear icon will <em>not</em> be shown when the props <code class=text-nowrap translate=no>readonly</code> or <code class=text-nowrap translate=no>disabled</code> are set.</li> </ul> <h3 id=icons class=bv-no-focus-ring><span class=bd-content-title>Icons<a class=anchorjs-link href=#icons aria-labelledby=icons></a></span></h3> <p>By default <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> uses the <a href=/docs/icons class=font-weight-bold>Bootstrap Icons</a> icons <code class=text-nowrap translate=no>&#39;star&#39;</code>, <code class=text-nowrap translate=no>&#39;star-half&#39;</code>, <code class=text-nowrap translate=no>&#39;star-fill&#39;</code>, and the icon <code class=text-nowrap translate=no>&#39;x&#39;</code> (for the optional clear button). You can specify alternate Bootstrap Icons to use via the <code class=text-nowrap translate=no>icon-empty</code>, <code class=text-nowrap translate=no>icon-half</code>, <code class=text-nowrap translate=no>icon-full</code>, and <code class=text-nowrap translate=no>icon-clear</code> props. These props accept a Bootstrap Icon <samp class=notranslate translate=no>kebab-case</samp> name, and requires that the corresponding icon component be registered/installed either locally or globally.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span>\n      <span class=hljs-attr>icon-empty</span>=<span class=hljs-string>"heart"</span>\n      <span class=hljs-attr>icon-half</span>=<span class=hljs-string>"heart-half"</span>\n      <span class=hljs-attr>icon-full</span>=<span class=hljs-string>"heart-fill"</span>\n      <span class=hljs-attr>icon-clear</span>=<span class=hljs-string>"slash-circle"</span>\n      <span class=hljs-attr>show-clear</span>\n      <span class=hljs-attr>variant</span>=<span class=hljs-string>"danger"</span>\n    &gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-icons.vue --&gt;</span></pre></div><p>Alternatively, you an supply your own content via the <code class=text-nowrap translate=no>&#39;icon-empty&#39;</code>, <code class=text-nowrap translate=no>&#39;icon-half&#39;</code>, <code class=text-nowrap translate=no>&#39;icon-full&#39;</code>, and <code class=text-nowrap translate=no>&#39;icon-clear&#39;</code> scoped slots.</p> <h2 id=form-submission class=bv-no-focus-ring><span class=bd-content-title>Form submission<a class=anchorjs-link href=#form-submission aria-labelledby=form-submission></a></span></h2> <p>If you intend to submit the rating value via standard form submission, set the <code class=text-nowrap translate=no>name</code> prop to the desired form field name. A hidden input will be generated with the current value (or an empty string if there is no value).</p> <h2 id=using-in-input-groups class=bv-no-focus-ring><span class=bd-content-title>Using in input groups<a class=anchorjs-link href=#using-in-input-groups aria-labelledby=using-in-input-groups></a></span></h2> <p>The following is an example of placing <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> in an input group:</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-input-group</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-input-group-prepend</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"value = null"</span>&gt;</span>Clear<span class=hljs-tag>&lt;/<span class=hljs-name>b-button</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-input-group-prepend</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>color</span>=<span class=hljs-string>"#ff8800"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>b-input-group-append</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>b-input-group-text</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"justify-content-center"</span> <span class=hljs-attr>style</span>=<span class=hljs-string>"min-width: 3em;"</span>&gt;</span>\n          {{ value }}\n        <span class=hljs-tag>&lt;/<span class=hljs-name>b-input-group-text</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>b-input-group-append</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>b-input-group</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-literal>null</span>\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-input-group.vue --&gt;</span></pre></div><h2 id=internationalization class=bv-no-focus-ring><span class=bd-content-title>Internationalization<a class=anchorjs-link href=#internationalization aria-labelledby=internationalization></a></span></h2> <p>When a <code class=text-nowrap translate=no>locale</code> is specified, the displayed value (when the <code class=text-nowrap translate=no>show-value</code> prop is <code class=text-nowrap translate=no>true</code>) will be in the browser&#39;s default locale. To change the locale, simple set the <code class=text-nowrap translate=no>locale</code> prop to the preferred locale, or an array of prefered locales (most preferred locale first). This will affect the optional displayed value and the left-to-right or right-to-left orientation of the component.</p> <div class=bd-code><pre class="hljs html p-2" translate=no><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-select</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"locale"</span> <span class=hljs-attr>:options</span>=<span class=hljs-string>"locales"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mb-2"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-select</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>b-form-rating</span> <span class=hljs-attr>v-model</span>=<span class=hljs-string>"value"</span> <span class=hljs-attr>:locale</span>=<span class=hljs-string>"locale"</span> <span class=hljs-attr>show-value</span> <span class=hljs-attr>precision</span>=<span class=hljs-string>"1"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>b-form-rating</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"mt-2"</span>&gt;</span>Value: {{ value }}<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n  <span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n    data() {\n      <span class=hljs-keyword>return</span> {\n        <span class=hljs-attr>value</span>: <span class=hljs-number>3.5</span>,\n        <span class=hljs-attr>locale</span>: <span class=hljs-string>\'en-US\'</span>,\n        <span class=hljs-attr>locales</span>: [\n          { <span class=hljs-attr>text</span>: <span class=hljs-string>\'English US (en-US)\'</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>\'en-US\'</span> },\n          { <span class=hljs-attr>text</span>: <span class=hljs-string>\'French (fr)\'</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>\'fr\'</span> },\n          { <span class=hljs-attr>text</span>: <span class=hljs-string>\'Persian (fa)\'</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>\'fa\'</span>},\n          { <span class=hljs-attr>text</span>: <span class=hljs-string>\'Arabic Egyptian (ar-EG)\'</span>, <span class=hljs-attr>value</span>: <span class=hljs-string>\'ar-EG\'</span> }\n        ]\n      }\n    }\n  }\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-comment>&lt;!-- b-form-rating-i18n.vue --&gt;</span></pre></div><h2 id=implementation-notes class=bv-no-focus-ring><span class=bd-content-title>Implementation notes<a class=anchorjs-link href=#implementation-notes aria-labelledby=implementation-notes></a></span></h2> <p>The ratings control uses the Bootstrap v4 <code class=text-nowrap translate=no>form-control*</code>, <code class=text-nowrap translate=no>d-*</code> (display), <code class=text-nowrap translate=no>border-*</code> and <code class=text-nowrap translate=no>text-{variant}</code> classes, as well as BootstrapVue&#39;s custom CSS for proper styling.</p> <p>The root element of the control is an <code class=text-nowrap translate=no>&lt;output&gt;</code> element, which allows a <code class=text-nowrap translate=no>&lt;label&gt;</code> element to be associated with it.</p> <h2 id=accessibility class=bv-no-focus-ring><span class=bd-content-title>Accessibility<a class=anchorjs-link href=#accessibility aria-labelledby=accessibility></a></span></h2> <p>To screen reader users <code class=text-nowrap translate=no>&lt;b-form-rating&gt;</code> appears as a <em>slider</em> type input input.</p> <p>Keyboard navigation is employed to select the rating value, and mimics the keyboard controls of <code class=text-nowrap translate=no>range</code> inputs:</p> <ul> <li><kbd class=notranslate translate=no>Left</kbd> or <kbd class=notranslate translate=no>Down</kbd> will decrement the rating value by <code class=text-nowrap translate=no>1</code></li> <li><kbd class=notranslate translate=no>Right</kbd> or <kbd class=notranslate translate=no>Up</kbd> will increment the rating value by <code class=text-nowrap translate=no>1</code></li> <li>When the <a href=#internationalization class=font-weight-bold><code class=text-nowrap translate=no>locale</code></a> resolves to a right-to-left language, the <kbd class=notranslate translate=no>Left</kbd> and <kbd class=notranslate translate=no>Right</kbd> behaviour is reversed.</li> </ul> '}}]);